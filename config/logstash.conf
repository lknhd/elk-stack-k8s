# all input will come from filebeat, no local logs
input {
  beats {
    port => 5044
  }
}
filter {
  if [type] == "mysql-slow" {
    grok {
      match => { 
        "message" => "# User@Host: %{USER:user}?\[%{USER}?\] @ %{HOSTNAME:host}? \[%{IP:ip}?\](?:\s*Id:\s* %{INT:id})?\n# Schema: %{NOTSPACE:schema}?  Last_errno: %{INT:last_errno}  Killed: %{INT:killed}\n# Query_time: %{NUMBER:query_time_sec}  Lock_time: %{NUMBER:lock_time_sec}  Rows_sent: %{INT:rows_sent}  Rows_examined: %{INT:rows_examined}  Rows_affected: %{INT:rows_affected}\n# Bytes_sent: %{INT:bytes_sent}\n(?:use %{DATA}\n)?SET timestamp=%{INT:[@metadata][timestamp]};\n(?<query>(.|\n)*)"
      }
      remove_field => [ "message" ]
    }
    
    date {
      match => [ "[@metadata][timestamp]", "UNIX" ]
    }
  
    mutate {
      convert => {
        "id" => "integer"
        "last_errno" => "integer"
        "killed" => "integer"
        "query_time_sec" => "float"
        "lock_time_sec" => "float"
        "rows_sent" => "integer"
        "rows_examined" => "integer"
        "rows_affected" => "integer"
        "bytes_sent" => "integer"
      }
      gsub => [ "query", "\n# Time: [0-9]+ [0-9]{2}:[0-9]{2}:[0-9]{2}$", "" ]
    }
  }

  if [type] == "mysql-error" {
    grok {
      match => { 
        "message" => "%{TIMESTAMP_ISO8601:[@metadata][timestamp]} %{INT:pid} \[%{DATA:severity}\]   (?<message>(.|\n)*)"
      }
      overwrite => [ "message" ]
    }
    
    date {
      match => [ "[@metadata][timestamp]", "ISO8601" ]
    }
  
    mutate {
      convert => {
        "pid" => "integer"
      }
    }
  
    if "_grokparsefailure" in [tags] {
      drop {}
    }
  }
}

output {
  elasticsearch {
    hosts => [ "http://elk-es:9200" ]
    index => "logstash-%{[type]}-%{+YYYY.MM.dd}"
    manage_template => false
  }
}